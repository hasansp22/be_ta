{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red24\green24\blue24;\red193\green193\blue193;
\red67\green192\blue160;\red140\green211\blue254;\red212\green214\blue154;\red202\green202\blue202;\red70\green137\blue204;
\red89\green138\blue67;\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c12157\c12157\c12157;\cssrgb\c80000\c80000\c80000;
\cssrgb\c30588\c78824\c69020;\cssrgb\c61176\c86275\c99608;\cssrgb\c86275\c86275\c66667;\cssrgb\c83137\c83137\c83137;\cssrgb\c33725\c61176\c83922;
\cssrgb\c41569\c60000\c33333;\cssrgb\c80784\c56863\c47059;}
{\info
{\author Muhammad Hasan Afandi S}}\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 app_py\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf6 \strokec6 app\cf4 \strokec4 , \cf6 \strokec6 db\cf4 \strokec4 , \cf5 \strokec5 response\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 flask\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf7 \strokec7 jsonify\cf4 \strokec4 , \cf6 \strokec6 request\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 crochet\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 crochet\cf4 \strokec4 .\cf7 \strokec7 setup\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 scrapy\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 signals\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 scrapy\cf4 \strokec4 .\cf5 \strokec5 crawler\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 CrawlerRunner\cf4 \strokec4 , \cf5 \strokec5 CrawlerProcess\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 scrapy\cf4 \strokec4 .\cf5 \strokec5 utils\cf4 \strokec4 .\cf5 \strokec5 project\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf7 \strokec7 get_project_settings\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 twisted\cf4 \strokec4 .\cf5 \strokec5 internet\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 reactor\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 scrapy\cf4 \strokec4 .\cf5 \strokec5 signalmanager\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 dispatcher\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 app_py\cf4 \strokec4 .\cf5 \strokec5 scrape\cf4 \strokec4 .\cf5 \strokec5 crawl\cf4 \strokec4 .\cf5 \strokec5 spiders\cf4 \strokec4 .\cf5 \strokec5 post_scrape\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 PostSpider\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 mysql\cf4 \strokec4 .\cf5 \strokec5 connector\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 app_py\cf4 \strokec4 .\cf5 \strokec5 model\cf4 \strokec4 .\cf5 \strokec5 LaptopModel\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 Laptop\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 output_data\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  []\cb1 \
\cf6 \cb3 \strokec6 crawl_runner\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf5 \strokec5 CrawlerRunner\cf4 \strokec4 ()\cb1 \
\cf6 \cb3 \strokec6 url\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf5 \strokec5 PostSpider\cf4 \strokec4 .\cf6 \strokec6 start_urls\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 @\cf5 \strokec5 crochet\cf7 \strokec7 .run_in_reactor\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 def\cf4 \strokec4  \cf7 \strokec7 scrape_with_crochet\cf4 \strokec4 (\cf6 \strokec6 url\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 dispatcher\cf4 \strokec4 .\cf7 \strokec7 connect\cf4 \strokec4 (\cf7 \strokec7 _crawler_result\cf4 \strokec4 , \cf6 \strokec6 signal\cf8 \strokec8 =\cf5 \strokec5 signals\cf4 \strokec4 .\cf6 \strokec6 item_scraped\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 eventual\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf6 \strokec6 crawl_runner\cf4 \strokec4 .\cf7 \strokec7 crawl\cf4 \strokec4 (\cf5 \strokec5 PostSpider\cf4 \strokec4 , \cf6 \strokec6 category\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf6 \strokec6 url\cf4 \strokec4 )\cb1 \
\cb3     \cb1 \
\cb3     \cf6 \strokec6 process\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf5 \strokec5 CrawlerProcess\cf4 \strokec4 (\cf7 \strokec7 get_project_settings\cf4 \strokec4 ())\cb1 \
\cb3     \cf6 \strokec6 process\cf4 \strokec4 .\cf7 \strokec7 crawl\cf4 \strokec4 (\cf5 \strokec5 PostSpider\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 process\cf4 \strokec4 .\cf7 \strokec7 start\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf10 \strokec10 # runner = CrawlerRunner(get_project_settings())\cf4 \cb1 \strokec4 \
\
\cb3     \cf10 \strokec10 # d = runner.crawl(PostSpider)\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 # d.addBoth(lambda _: reactor.stop())\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 # reactor.run()\cf4 \cb1 \strokec4 \
\
\cb3     \cf6 \strokec6 data\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf5 \strokec5 PostSpider\cf4 \strokec4 .data\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 simpan_crawler\cf4 \strokec4 (\cf6 \strokec6 data\cf4 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf6 \strokec6 eventual\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 def\cf4 \strokec4  \cf7 \strokec7 _crawler_result\cf4 \strokec4 (\cf6 \strokec6 item\cf4 \strokec4 , \cf6 \strokec6 response\cf4 \strokec4 , \cf6 \strokec6 spider\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 # print("Berhasil melakukan crawler")\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 output_data\cf4 \strokec4 .\cf7 \strokec7 append\cf4 \strokec4 (\cf5 \strokec5 dict\cf4 \strokec4 (\cf6 \strokec6 item\cf4 \strokec4 ))\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 # def crawler():\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 # runner = CrawlerRunner(get_project_settings())\cf4 \cb1 \strokec4 \
\
\cb3     \cf10 \strokec10 # d = runner.crawl(PostSpider)\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 # d.addBoth(lambda _: reactor.stop())\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 # reactor.run()\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 #     data = PostSpider.data\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 # reactor.stop()\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10 #     simpan_crawler(data)\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 # yield runner.crawl(PostSpider)\cf4 \cb1 \strokec4 \
\
\cb3     \cf10 \strokec10 # return "sudah"\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 def\cf4 \strokec4  \cf7 \strokec7 simpan_crawler\cf4 \strokec4 (\cf6 \strokec6 data\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf10 \strokec10 # data = request.get_json()\cf4 \cb1 \strokec4 \
\
\cb3     \cf6 \strokec6 conn\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf5 \strokec5 mysql\cf4 \strokec4 .\cf5 \strokec5 connector\cf4 \strokec4 .\cf7 \strokec7 connect\cf4 \strokec4 (\cb1 \
\cb3             \cf6 \strokec6 host\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf11 \strokec11 'localhost'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 user\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf11 \strokec11 'root'\cf4 \strokec4 ,\cb1 \
\cb3             \cf6 \strokec6 database\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf11 \strokec11 'db-ta-cp'\cf4 \strokec4 ,\cb1 \
\cb3         )\cb1 \
\
\cb3     \cf6 \strokec6 cur\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf6 \strokec6 conn\cf4 \strokec4 .\cf7 \strokec7 cursor\cf4 \strokec4 ()\cb1 \
\cb3     \cf10 \strokec10 # table = "create table if not exists laptop(id bigint(20) not null auto_increment, name varchar(100) not null, cpu varchar(100) not null, gpu varchar(100) not null, storage int(11) not null, ram int(11) not null, display float not null, price int not null, created_at datetime default current_timestamp, updated_at datetime default current_timestamp on update current_timestamp, PRIMARY KEY (id))"\cf4 \cb1 \strokec4 \
\cb3     \cf10 \strokec10 # cur.execute(table)\cf4 \cb1 \strokec4 \
\
\cb3     \cf6 \strokec6 cur\cf4 \strokec4 .\cf7 \strokec7 execute\cf4 \strokec4 (\cf11 \strokec11 """\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11                          create table if not exists laptop(\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          id bigint(20) not null auto_increment,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          name varchar(100) not null,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          cpu varchar(100) not null,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          gpu varchar(100) not null,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          storage int(11) not null,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          ram int(11) not null,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          display float not null,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          price int not null,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          created_at datetime default current_timestamp,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          updated_at datetime default current_timestamp on update current_timestamp,\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          PRIMARY KEY (id)\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11                          )"""\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf6 \strokec6 item\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf6 \strokec6 data\cf4 \strokec4 :\cb1 \
\cb3         \cf10 \strokec10 # check = "SELECT * FROM laptop WHERE name = %s"\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 # name = item['name']\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 # cur.execute(check, name)\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 # check = cur.execute("SELECT * FROM laptop where name = %s", (item['name']))\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 # result = check.fetchone()\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 # if result:\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #     print("Laptop already in database")\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 # else:\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 query\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  \cf11 \strokec11 "INSERT INTO laptop (name, cpu, gpu, storage, ram, display, price) VALUES (\cf9 \strokec9 %s\cf11 \strokec11 , \cf9 \strokec9 %s\cf11 \strokec11 , \cf9 \strokec9 %s\cf11 \strokec11 , \cf9 \strokec9 %s\cf11 \strokec11 , \cf9 \strokec9 %s\cf11 \strokec11 , \cf9 \strokec9 %s\cf11 \strokec11 , \cf9 \strokec9 %s\cf11 \strokec11 )"\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 values\cf4 \strokec4  \cf8 \strokec8 =\cf4 \strokec4  (\cf6 \strokec6 item\cf4 \strokec4 [\cf11 \strokec11 'name'\cf4 \strokec4 ], \cf6 \strokec6 item\cf4 \strokec4 [\cf11 \strokec11 'cpu'\cf4 \strokec4 ], \cf6 \strokec6 item\cf4 \strokec4 [\cf11 \strokec11 'gpu'\cf4 \strokec4 ], \cf6 \strokec6 item\cf4 \strokec4 [\cf11 \strokec11 'storage'\cf4 \strokec4 ], \cf6 \strokec6 item\cf4 \strokec4 [\cf11 \strokec11 'ram'\cf4 \strokec4 ], \cf6 \strokec6 item\cf4 \strokec4 [\cf11 \strokec11 'display'\cf4 \strokec4 ], \cf6 \strokec6 item\cf4 \strokec4 [\cf11 \strokec11 'price'\cf4 \strokec4 ])\cb1 \
\cb3         \cf6 \strokec6 cur\cf4 \strokec4 .\cf7 \strokec7 execute\cf4 \strokec4 (\cf6 \strokec6 query\cf4 \strokec4 , \cf6 \strokec6 values\cf4 \strokec4 )\cb1 \
\cb3         \cf10 \strokec10 # cur.execute(""" INSERT INTO laptop (name, cpu, gpu, storage, ram, display, price) VALUES (%s, %s, %s, %s, %s, %s, %s) """,\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                  (item['name'],\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                   item['cpu'],\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                   item['gpu'],\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                   item['storage'],\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                   item['ram'],\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                   item['display'],\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                   item['price']\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 #                   ))\cf4 \cb1 \strokec4 \
\
\cb3         \cf6 \strokec6 conn\cf4 \strokec4 .\cf7 \strokec7 commit\cf4 \strokec4 ()\cb1 \
\cb3         \cf6 \strokec6 conn\cf4 \strokec4 .\cf7 \strokec7 close\cf4 \strokec4 ()\cb1 \
\
\cb3         \cf10 \strokec10 # return item\cf4 \cb1 \strokec4 \
}